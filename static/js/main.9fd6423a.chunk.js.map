{"version":3,"sources":["components/SearchField.js","components/ToolBar.js","components/RepoDialog.js","components/Repo.js","components/RepoList.js","components/App.js","reportWebVitals.js","index.js"],"names":["SearchField","props","onSubmit","this","handleOnSubmit","Grid","container","justify","direction","alignItems","spacing","item","TextField","id","variant","label","onChange","searchFieldInput","Button","color","type","size","onClick","onClickRefresh","React","Component","ToolBar","onClickGitHubIcon","link","window","open","repo","onClickCheckMark","onClickTrashIcon","className","Tooltip","title","IconButton","aria-label","name","githubLink","RepoDialog","toggleDialogVisibility","Dialog","onClose","aria-labelledby","aria-describedby","DialogTitle","DialogContent","DialogContentText","tagName","author","body","DialogActions","Repo","isHighlighted","repoName","highlightedRepoList","includes","setState","openDialog","state","Card","CardActionArea","CardContent","releaseDate","split","join","RepoList","repoList","forEach","_","index","createRef","repoComponents","map","ref","App","componentDidMount","event","preventDefault","parseSearchInput","searchInput","input","inputArray","githubUser","githubRepo","getRepoLatestRelease","newRepoList","filter","repoObject","fetch","method","headers","then","response","json","data","repoReleaseInfo","published_at","tag_name","message","login","html_url","getRepoGeneralInfo","isRepoAlreadyTracked","trackedRepo","console","log","newHighlightedRepoList","indexOfRepo","indexOf","splice","description","isRepoGotNewRelease","deleteOutdatedRepo","push","alert","catch","error","newRepo","target","value","displayAlert","Alert","severity","Authorization","repoListRef","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.9fd6423a.chunk.js","sourcesContent":["import React from \"react\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\n\r\nclass SearchField extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <form onSubmit={this.props.handleOnSubmit}>\r\n        <Grid\r\n          container\r\n          justify=\"center\"\r\n          direction=\"row\"\r\n          alignItems=\"center\"\r\n          spacing={2}\r\n        >\r\n          <Grid item>\r\n            <TextField\r\n              id=\"outlined-basic\"\r\n              variant=\"outlined\"\r\n              label=\"user / repository\"\r\n              onChange={this.props.searchFieldInput}\r\n            />\r\n          </Grid>\r\n          <Grid item>\r\n            <Button\r\n              color=\"primary\"\r\n              variant=\"contained\"\r\n              type=\"submit\"\r\n              size=\"large\"\r\n            >\r\n              Track Repo\r\n            </Button>\r\n          </Grid>\r\n          <Grid item>\r\n            <Button\r\n              color=\"primary\"\r\n              variant=\"contained\"\r\n              size=\"large\"\r\n              onClick={() => this.props.onClickRefresh()}\r\n            >\r\n              Refresh\r\n            </Button>\r\n          </Grid>\r\n        </Grid>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nexport default SearchField;\r\n","import React from \"react\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport BeenhereIcon from \"@material-ui/icons/Beenhere\";\r\nimport \"../styles/ToolBar.scss\";\r\nimport Tooltip from \"@material-ui/core/Tooltip\";\r\nimport VisibilityOffIcon from \"@material-ui/icons/VisibilityOff\";\r\nimport GitHubIcon from \"@material-ui/icons/GitHub\";\r\n\r\nclass ToolBar extends React.Component {\r\n  onClickGitHubIcon = (link) => {\r\n    window.open(link, \"_blank\");\r\n  };\r\n\r\n  render() {\r\n    const { repo, onClickCheckMark, onClickTrashIcon } = this.props;\r\n    return (\r\n      <Grid className=\"tool-bar\" justify=\"flex-end\" container direction=\"row\">\r\n        <Grid item className=\"delete-button\">\r\n          <Tooltip title=\"Untrack repository\">\r\n            <IconButton\r\n              aria-label=\"delete\"\r\n              onClick={() => onClickTrashIcon(repo)}\r\n            >\r\n              <VisibilityOffIcon />\r\n            </IconButton>\r\n          </Tooltip>\r\n        </Grid>\r\n        <Grid item className=\"check-button\">\r\n          <Tooltip title=\"Mark repository as seen\">\r\n            <IconButton\r\n              aria-label=\"check\"\r\n              onClick={() => onClickCheckMark(repo.name)}\r\n            >\r\n              <BeenhereIcon />\r\n            </IconButton>\r\n          </Tooltip>\r\n          <Tooltip title=\"Go to GitHub page\">\r\n            <IconButton\r\n              aria-label=\"github\"\r\n              onClick={() => this.onClickGitHubIcon(repo.githubLink)}\r\n            >\r\n              <GitHubIcon />\r\n            </IconButton>\r\n          </Tooltip>\r\n        </Grid>\r\n      </Grid>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ToolBar;\r\n","import React from \"react\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\n\r\nexport default function RepoDialog({ repo, open, toggleDialogVisibility }) {\r\n  return (\r\n    <div>\r\n      <Dialog\r\n        className=\"repo-dialog\"\r\n        open={open}\r\n        onClose={toggleDialogVisibility}\r\n        aria-labelledby=\"alert-dialog-title\"\r\n        aria-describedby=\"alert-dialog-description\"\r\n      >\r\n        <DialogTitle id=\"alert-dialog-title\">{\"Release Details\"}</DialogTitle>\r\n        <DialogContent>\r\n          <DialogContentText id=\"alert-dialog-description\">\r\n            <b>Repo:</b> {repo.name}\r\n            <br />\r\n            <b>Version:</b> {repo.tagName}\r\n            <br />\r\n            <b>Title:</b> {repo.title}\r\n            <br />\r\n            <b>Author:</b> {repo.author}\r\n            <br />\r\n            <b>Details:</b> {repo.body}\r\n          </DialogContentText>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={toggleDialogVisibility} color=\"primary\">\r\n            Close\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport Card from \"@material-ui/core/Card\";\r\nimport CardContent from \"@material-ui/core/CardContent\";\r\nimport CardActionArea from \"@material-ui/core/CardActionArea\";\r\nimport \"../styles/Repo.scss\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport ToolBar from \"./ToolBar\";\r\nimport RepoDialog from \"./RepoDialog\";\r\n\r\nclass Repo extends React.Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      openDialog: false,\r\n    };\r\n  }\r\n\r\n  isHighlighted = (repoName) => {\r\n    const { highlightedRepoList } = this.props;\r\n    return highlightedRepoList.includes(repoName) ? `highlighted` : ``;\r\n  };\r\n\r\n  toggleDialogVisibility = () => {\r\n    this.setState({ openDialog: !this.state.openDialog });\r\n  };\r\n\r\n  render() {\r\n    const { repo, onClickTrashIcon, onClickCheckMark } = this.props;\r\n    return (\r\n      <div>\r\n        <Card className={`repo ${this.isHighlighted(repo.name)}`}>\r\n          <CardActionArea onClick={this.toggleDialogVisibility}>\r\n            <Grid container direction=\"row\" alignItems=\"center\" spacing={2}>\r\n              <Grid item className=\"card-content\">\r\n                <CardContent>\r\n                  <h2>{repo.name}</h2>\r\n                  version: {repo.tagName}\r\n                  <br />\r\n                  release:{\" \"}\r\n                  {repo.releaseDate\r\n                    .split(\"T\")\r\n                    .join(\" at \")\r\n                    .split(\"Z\")\r\n                    .join(\" UTC\")}\r\n                </CardContent>\r\n              </Grid>\r\n            </Grid>\r\n          </CardActionArea>\r\n        </Card>\r\n        <ToolBar\r\n          onClickTrashIcon={onClickTrashIcon}\r\n          onClickCheckMark={onClickCheckMark}\r\n          repo={repo}\r\n        />\r\n        <RepoDialog\r\n          open={this.state.openDialog}\r\n          toggleDialogVisibility={this.toggleDialogVisibility}\r\n          repo={repo}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Repo;\r\n","import React from \"react\";\r\nimport Repo from \"./Repo\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\n\r\nclass RepoList extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    const { repoList } = props;\r\n    repoList.forEach((_, index) => {\r\n      this[`repo-${index}`] = React.createRef();\r\n    });\r\n  }\r\n\r\n  render() {\r\n    const {\r\n      repoList,\r\n      onClickTrashIcon,\r\n      onClickCheckMark,\r\n      highlightedRepoList,\r\n    } = this.props;\r\n    var repoComponents = repoList.map((repo, index) => {\r\n      return repo.releaseDate ? (\r\n        <Grid item key={index}>\r\n          <Repo\r\n            repo={repo}\r\n            onClickTrashIcon={onClickTrashIcon}\r\n            onClickCheckMark={onClickCheckMark}\r\n            highlightedRepoList={highlightedRepoList}\r\n            ref={this[`repo-${index}`]}\r\n          />\r\n        </Grid>\r\n      ) : null;\r\n    });\r\n\r\n    return (\r\n      <Grid\r\n        container\r\n        justify=\"center\"\r\n        spacing={2}\r\n        alignItems=\"center\"\r\n        direction=\"column\"\r\n      >\r\n        {repoComponents}\r\n      </Grid>\r\n    );\r\n  }\r\n}\r\n\r\nexport default RepoList;\r\n","import React from \"react\";\nimport \"../styles/App.scss\";\nimport SearchField from \"./SearchField\";\nimport RepoList from \"./RepoList\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Alert from \"@material-ui/lab/Alert\";\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      searchInput: \"\",\n      githubUser: null,\n      githubRepo: null,\n      repoList: [],\n      highlightedRepoList: [],\n      headers: {\n        Authorization: `Token a6397b9f1bf0a5dd23ba6c4d516e13a852334b96`,\n      },\n    };\n    this.repoListRef = React.createRef();\n  }\n\n  componentDidMount = () => {};\n\n  handleOnSubmit = (event) => {\n    event.preventDefault();\n    this.parseSearchInput(this.state.searchInput);\n  };\n\n  parseSearchInput = (input) => {\n    const inputArray = input.split(\" \").join(\"\").split(\"/\");\n    this.setState(\n      {\n        githubUser: inputArray[0],\n        githubRepo: inputArray[1],\n      },\n      this.getRepoLatestRelease\n    );\n  };\n\n  onClickTrashIcon = (repo) => {\n    var newRepoList = this.state.repoList;\n    newRepoList = newRepoList.filter((repoObject) => {\n      return repoObject !== repo;\n    });\n    this.setState({ repoList: newRepoList });\n  };\n\n  getRepoLatestRelease = () => {\n    const { githubUser, githubRepo } = this.state;\n    fetch(\n      `https://api.github.com/repos/${githubUser}/${githubRepo}/releases/latest`,\n      {\n        method: \"GET\",\n        headers: this.state.headers,\n      }\n    )\n      .then((response) => response.json())\n      .then((data) => {\n        const repoReleaseInfo = {\n          releaseDate: data.published_at,\n          tagName: data.tag_name,\n          message: data.message,\n          body: data.body,\n          title: data.name,\n          author: data.author.login,\n          githubLink: data.html_url,\n        };\n        this.getRepoGeneralInfo(repoReleaseInfo);\n      });\n  };\n\n  isRepoAlreadyTracked = (repo) => {\n    const { repoList } = this.state;\n    for (var trackedRepo of repoList) {\n      if (\n        trackedRepo.name === repo.name &&\n        trackedRepo.tagName === repo.tagName\n      ) {\n        return true;\n      }\n    }\n    return false;\n  };\n\n  onClickCheckMark = (repoName) => {\n    console.log(\"check\");\n    var newHighlightedRepoList = this.state.highlightedRepoList;\n    var indexOfRepo = newHighlightedRepoList.indexOf(repoName);\n    if (indexOfRepo > -1) {\n      newHighlightedRepoList.splice(indexOfRepo, 1);\n    }\n    this.setState({ highlightedRepoList: newHighlightedRepoList });\n  };\n\n  getRepoGeneralInfo = (repoReleaseInfo) => {\n    const { githubUser, githubRepo } = this.state;\n    var newRepoList = [];\n    var newHighlightedRepoList = [];\n    fetch(`https://api.github.com/repos/${githubUser}/${githubRepo}`, {\n      method: \"GET\",\n      headers: this.state.headers,\n    })\n      .then((response) => response.json())\n      .then((data) => {\n        repoReleaseInfo.name = data.name;\n        repoReleaseInfo.description = data.description;\n        if (\n          !this.isRepoAlreadyTracked(repoReleaseInfo) &&\n          repoReleaseInfo.message !== \"Not Found\"\n        ) {\n          newRepoList = this.state.repoList;\n          newRepoList.push(repoReleaseInfo);\n          newHighlightedRepoList = this.state.highlightedRepoList;\n          newHighlightedRepoList.push(repoReleaseInfo.name);\n          this.setState({\n            repoList: newRepoList,\n            alert: \"success\",\n            highlightedRepoList: newHighlightedRepoList,\n          });\n        } else if (\n          this.isRepoAlreadyTracked &&\n          this.isRepoGotNewRelease(repoReleaseInfo)\n        ) {\n          newRepoList = this.state.repoList;\n          newRepoList = this.deleteOutdatedRepo(newRepoList, repoReleaseInfo);\n          newHighlightedRepoList = this.state.highlightedRepoList;\n          newHighlightedRepoList.push(repoReleaseInfo.name);\n          this.setState({\n            repoList: newRepoList,\n            alert: \"new release\",\n            highlightedRepoList: newHighlightedRepoList,\n          });\n        } else if (this.isRepoAlreadyTracked(repoReleaseInfo)) {\n          this.setState({ alert: \"already tracked\" });\n        } else if (repoReleaseInfo.message === \"Not Found\") {\n          this.setState({ alert: \"error\" });\n        }\n      })\n      .catch((error) => {\n        console.log(error);\n      });\n  };\n\n  isRepoGotNewRelease = (newRepo) => {\n    const { repoList } = this.state;\n    for (var trackedRepo of repoList) {\n      if (\n        trackedRepo.name === newRepo.name &&\n        trackedRepo.tagName !== newRepo.tagName\n      ) {\n        return true;\n      }\n    }\n    return false;\n  };\n\n  deleteOutdatedRepo = (repoList, repo) => {\n    const filteredRepoList = repoList.filter((trackedRepo) => {\n      return trackedRepo.name !== repo.name;\n    });\n    return filteredRepoList;\n  };\n\n  searchFieldInput = (event) => {\n    this.setState({ searchInput: event.target.value });\n  };\n\n  onClickRefresh = () => {\n    this.getRepoLatestRelease();\n  };\n\n  displayAlert = () => {\n    switch (this.state.alert) {\n      case \"success\":\n        return <Alert severity=\"success\">Added a new repo for tracking</Alert>;\n      case \"new release\":\n        return <Alert severity=\"success\">Success: found new releass(s)</Alert>;\n      case \"already tracked\":\n        return (\n          <Alert severity=\"warning\">\n            You are already tracking this repository\n          </Alert>\n        );\n      case \"error\":\n        return (\n          <Alert severity=\"error\">\n            Please check that you have the right user name and repository\n          </Alert>\n        );\n      default:\n        return (\n          <Alert severity=\"info\">\n            {`Enter the GitHub user followed by a '/' and the name of the repository`}\n          </Alert>\n        );\n    }\n  };\n\n  render() {\n    return (\n      <div>\n        {this.displayAlert()}\n        <Grid\n          container\n          alignItems=\"center\"\n          spacing={5}\n          direction=\"column\"\n          className=\"main-content\"\n        >\n          <Grid item className=\"empty-space\"></Grid>\n          <Grid item className=\"search-box\">\n            <SearchField\n              searchFieldInput={this.searchFieldInput}\n              handleOnSubmit={this.handleOnSubmit}\n              onClickRefresh={this.onClickRefresh}\n            />\n          </Grid>\n          <Grid item>\n            <RepoList\n              repoList={this.state.repoList}\n              onClickTrashIcon={this.onClickTrashIcon}\n              onClickCheckMark={this.onClickCheckMark}\n              highlightedRepoList={this.state.highlightedRepoList}\n              ref={this.repoListRef}\n            />\n          </Grid>\n        </Grid>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./styles/index.scss\";\nimport App from \"./components/App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}