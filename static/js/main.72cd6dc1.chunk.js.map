{"version":3,"sources":["components/SearchField.js","components/FilterBar.js","components/SearchFunction.js","components/ToolBar.js","components/RepoDialog.js","components/Repo.js","components/RepoList.js","components/SpeedDialControl.js","components/App.js","reportWebVitals.js","index.js"],"names":["SearchField","onCloseSearchFunction","setState","anchorEl","onClickSearchFunction","event","currentTarget","state","onSubmit","this","props","handleOnSubmit","Menu","id","keepMounted","open","Boolean","onClose","MenuItem","onClick","onClickFilterFunction","onClickSearchFucntion","Grid","container","justify","direction","alignItems","spacing","item","TextField","variant","label","placeholder","onChange","searchFieldInput","InputProps","startAdornment","InputAdornment","position","IconButton","aria-controls","aria-haspopup","Button","color","type","size","React","Component","FilterBar","filterFieldInput","SearchFunction","onClickRefresh","searchFunctionType","ToolBar","onClickGitHubIcon","link","window","repo","onClickCheckMark","onClickTrashIcon","className","Tooltip","title","aria-label","githubLink","isHighlighted","name","disableRipple","disableFocusRipple","style","backgroundColor","cursor","RepoDialog","toggleDialogVisibility","Dialog","aria-labelledby","aria-describedby","DialogTitle","DialogContent","DialogContentText","tagName","author","body","DialogActions","Repo","highlightedRepoList","includes","openDialog","Card","CardActionArea","CardContent","releaseDate","split","join","RepoList","repoList","forEach","_","index","createRef","repoComponents","map","ref","SpeedDialControl","actions","icon","deleteAllRepos","getAllReposLatestReleases","onCloseSpeedDial","isSpeedDialOpen","onOpenSpeedDial","onHiddenChange","isSpeedDialHidden","target","checked","onClickSpeedDialAction","callBackAction","speedDialDirection","SpeedDial","ariaLabel","hidden","onOpen","openIcon","action","SpeedDialAction","tooltipTitle","tooltipOpen","whiteSpace","App","preventDefault","parseSearchInput","searchInput","input","inputArray","githubUser","githubRepo","getRepoLatestRelease","newRepoList","filter","repoObject","isRepoAlreadyTracked","trackedRepo","repoName","newHighlightedRepoList","indexOfRepo","indexOf","splice","repoListOrderedByDateAdded","repoListOrderedByName","gitHubUser","gitHubRepo","repoReleaseInfo","fetch","method","headers","then","response","json","data","published_at","tag_name","message","login","html_url","getRepoGeneralInfo","alert","isAlertDisplayed","description","isRepoGotNewRelease","deleteOutdatedRepo","push","catch","error","console","log","newRepo","value","filterInput","filterRepoList","filterWord","displayAlert","Alert","severity","onCloseAlert","Authorization","repoListRef","Snackbar","autoHideDuration","anchorOrigin","vertical","horizontal","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","theme","createMuiTheme","palette","ReactDOM","render","ThemeProvider","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.72cd6dc1.chunk.js","sourcesContent":["import React from \"react\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport PlaylistAddIcon from \"@material-ui/icons/PlaylistAdd\";\r\nimport InputAdornment from \"@material-ui/core/InputAdornment\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport Menu from \"@material-ui/core/Menu\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\n\r\nclass SearchField extends React.Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      anchorEl: null,\r\n    };\r\n  }\r\n\r\n  onCloseSearchFunction = () => {\r\n    this.setState({ anchorEl: null });\r\n  };\r\n\r\n  onClickSearchFunction = (event) => {\r\n    this.setState({ anchorEl: event.currentTarget });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <form onSubmit={this.props.handleOnSubmit}>\r\n        <Menu\r\n          id=\"search-function-menu\"\r\n          anchorEl={this.state.anchorEl}\r\n          keepMounted\r\n          open={Boolean(this.state.anchorEl)}\r\n          onClose={this.onCloseSearchFunction}\r\n        >\r\n          <MenuItem onClick={this.props.onClickFilterFunction}>Filter</MenuItem>\r\n          <MenuItem onClick={this.props.onClickSearchFucntion}>\r\n            Add Repo\r\n          </MenuItem>\r\n        </Menu>\r\n        <Grid\r\n          container\r\n          justify=\"center\"\r\n          direction=\"row\"\r\n          alignItems=\"center\"\r\n          spacing={2}\r\n        >\r\n          <Grid item>\r\n            <TextField\r\n              id=\"outlined-basic\"\r\n              variant=\"outlined\"\r\n              label=\"Add a repository to tracking list\"\r\n              placeholder=\"user / repository\"\r\n              onChange={this.props.searchFieldInput}\r\n              InputProps={{\r\n                startAdornment: (\r\n                  <InputAdornment position=\"start\">\r\n                    <IconButton\r\n                      aria-controls=\"search-type-menu\"\r\n                      aria-haspopup=\"true\"\r\n                      onClick={this.onClickSearchFunction}\r\n                    >\r\n                      <PlaylistAddIcon />\r\n                    </IconButton>\r\n                  </InputAdornment>\r\n                ),\r\n              }}\r\n            />\r\n          </Grid>\r\n          <Grid item>\r\n            <Button\r\n              color=\"primary\"\r\n              variant=\"contained\"\r\n              type=\"submit\"\r\n              size=\"large\"\r\n            >\r\n              Add Repo\r\n            </Button>\r\n          </Grid>\r\n        </Grid>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nexport default SearchField;\r\n","import React from \"react\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport InputAdornment from \"@material-ui/core/InputAdornment\";\r\nimport SearchIcon from \"@material-ui/icons/Search\";\r\nimport Menu from \"@material-ui/core/Menu\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\n\r\nclass FilterBar extends React.Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      anchorEl: null,\r\n    };\r\n  }\r\n\r\n  onCloseSearchFunction = () => {\r\n    this.setState({ anchorEl: null });\r\n  };\r\n\r\n  onClickSearchFunction = (event) => {\r\n    this.setState({ anchorEl: event.currentTarget });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Menu\r\n          id=\"search-function-menu\"\r\n          anchorEl={this.state.anchorEl}\r\n          keepMounted\r\n          open={Boolean(this.state.anchorEl)}\r\n          onClose={this.onCloseSearchFunction}\r\n        >\r\n          <MenuItem onClick={this.props.onClickFilterFunction}>Filter</MenuItem>\r\n          <MenuItem onClick={this.props.onClickSearchFunction}>\r\n            Add Repo\r\n          </MenuItem>\r\n        </Menu>\r\n        <TextField\r\n          id=\"outlined-basic\"\r\n          variant=\"outlined\"\r\n          label=\"Filter tracked repositories by name\"\r\n          placeholder=\"repository name\"\r\n          onChange={this.props.filterFieldInput}\r\n          InputProps={{\r\n            startAdornment: (\r\n              <InputAdornment position=\"start\">\r\n                <IconButton\r\n                  aria-controls=\"search-type-menu\"\r\n                  aria-haspopup=\"true\"\r\n                  onClick={this.onClickSearchFunction}\r\n                >\r\n                  <SearchIcon />\r\n                </IconButton>\r\n              </InputAdornment>\r\n            ),\r\n          }}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default FilterBar;\r\n","import React from \"react\";\r\nimport SearchField from \"./SearchField\";\r\nimport FilterBar from \"./FilterBar\";\r\n\r\nclass SearchFunction extends React.Component {\r\n  render() {\r\n    const {\r\n      searchFieldInput,\r\n      handleOnSubmit,\r\n      onClickRefresh,\r\n      filterFieldInput,\r\n      onClickSearchFunction,\r\n      onClickFilterFunction,\r\n    } = this.props;\r\n\r\n    switch (this.props.searchFunctionType) {\r\n      case \"search\":\r\n        return (\r\n          <SearchField\r\n            searchFieldInput={searchFieldInput}\r\n            handleOnSubmit={handleOnSubmit}\r\n            onClickRefresh={onClickRefresh}\r\n            onClickSearchFunction={onClickSearchFunction}\r\n            onClickFilterFunction={onClickFilterFunction}\r\n          />\r\n        );\r\n      case \"filter\":\r\n        return (\r\n          <FilterBar\r\n            filterFieldInput={filterFieldInput}\r\n            onClickSearchFunction={onClickSearchFunction}\r\n            onClickFilterFunction={onClickFilterFunction}\r\n          />\r\n        );\r\n      default:\r\n        return null;\r\n    }\r\n  }\r\n}\r\n\r\nexport default SearchFunction;\r\n","import React from \"react\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport BeenhereIcon from \"@material-ui/icons/Beenhere\";\r\nimport \"../styles/ToolBar.scss\";\r\nimport Tooltip from \"@material-ui/core/Tooltip\";\r\nimport GitHubIcon from \"@material-ui/icons/GitHub\";\r\nimport DeleteIcon from \"@material-ui/icons/Delete\";\r\nimport BeenhereOutlinedIcon from \"@material-ui/icons/BeenhereOutlined\";\r\n\r\nclass ToolBar extends React.Component {\r\n  onClickGitHubIcon = (link) => {\r\n    window.open(link, \"_blank\");\r\n  };\r\n\r\n  render() {\r\n    const { repo, onClickCheckMark, onClickTrashIcon } = this.props;\r\n    return (\r\n      <Grid\r\n        className=\"tool-bar\"\r\n        justify=\"flex-end\"\r\n        container\r\n        direction=\"row\"\r\n        alignItems=\"center\"\r\n      >\r\n        <Grid item className=\"release-status\">\r\n          Tracking release\r\n        </Grid>\r\n        <Grid item className=\"toolbar-empty-space\"></Grid>\r\n        <Grid item className=\"github-button\">\r\n          <Tooltip title=\"Go to GitHub page\">\r\n            <IconButton\r\n              aria-label=\"github\"\r\n              onClick={() => this.onClickGitHubIcon(repo.githubLink)}\r\n            >\r\n              <GitHubIcon />\r\n            </IconButton>\r\n          </Tooltip>\r\n        </Grid>\r\n        <Grid item className=\"delete-button\">\r\n          <Tooltip title=\"Untrack repository\">\r\n            <IconButton\r\n              aria-label=\"delete\"\r\n              onClick={() => onClickTrashIcon(repo)}\r\n            >\r\n              <DeleteIcon />\r\n            </IconButton>\r\n          </Tooltip>\r\n        </Grid>\r\n        {this.props.isHighlighted === \"highlighted\" ? (\r\n          <Grid item className={`check-button bounce`}>\r\n            <Tooltip title=\"Mark update as seen\">\r\n              <IconButton\r\n                aria-label=\"check\"\r\n                onClick={() => onClickCheckMark(repo.name)}\r\n              >\r\n                <BeenhereOutlinedIcon />\r\n              </IconButton>\r\n            </Tooltip>\r\n          </Grid>\r\n        ) : (\r\n          <Grid item className={`check-button`}>\r\n            <IconButton\r\n              aria-label=\"check\"\r\n              onClick={() => onClickCheckMark(repo.name)}\r\n              color=\"primary\"\r\n              disableRipple=\"true\"\r\n              disableFocusRipple=\"true\"\r\n              style={{ backgroundColor: \"transparent\", cursor: \"default\" }}\r\n            >\r\n              <BeenhereIcon />\r\n            </IconButton>\r\n          </Grid>\r\n        )}\r\n      </Grid>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ToolBar;\r\n","import React from \"react\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\n\r\nexport default function RepoDialog({ repo, toggleDialogVisibility, open }) {\r\n  return (\r\n    <div>\r\n      <Dialog\r\n        className=\"repo-dialog\"\r\n        open={open}\r\n        onClose={toggleDialogVisibility}\r\n        aria-labelledby=\"alert-dialog-title\"\r\n        aria-describedby=\"alert-dialog-description\"\r\n      >\r\n        <DialogTitle id=\"alert-dialog-title\">{\"Release Details\"}</DialogTitle>\r\n        <DialogContent>\r\n          <DialogContentText id=\"alert-dialog-description\">\r\n            <b>Repo:</b> {repo.name}\r\n            <br />\r\n            <b>Version:</b> {repo.tagName}\r\n            <br />\r\n            <b>Release Title:</b> {repo.title}\r\n            <br />\r\n            <b>Author:</b> {repo.author}\r\n            <br />\r\n            <b>Release Notes:</b> {repo.body}\r\n          </DialogContentText>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={toggleDialogVisibility} color=\"primary\">\r\n            Close\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport Card from \"@material-ui/core/Card\";\r\nimport CardContent from \"@material-ui/core/CardContent\";\r\nimport CardActionArea from \"@material-ui/core/CardActionArea\";\r\nimport \"../styles/Repo.scss\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport ToolBar from \"./ToolBar\";\r\nimport RepoDialog from \"./RepoDialog\";\r\n\r\nclass Repo extends React.Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      openDialog: false,\r\n    };\r\n  }\r\n\r\n  isHighlighted = () => {\r\n    const { highlightedRepoList, repo } = this.props;\r\n    return highlightedRepoList.includes(repo.name) ? `highlighted` : ``;\r\n  };\r\n\r\n  toggleDialogVisibility = () => {\r\n    this.setState({ openDialog: !this.state.openDialog });\r\n  };\r\n\r\n  render() {\r\n    const { repo, onClickTrashIcon, onClickCheckMark } = this.props;\r\n    return (\r\n      <div>\r\n        <Card className={`repo ${this.isHighlighted(repo.name)}`}>\r\n          <CardActionArea onClick={this.toggleDialogVisibility}>\r\n            <Grid container direction=\"row\" alignItems=\"center\" spacing={2}>\r\n              <Grid item className=\"card-content\">\r\n                <CardContent>\r\n                  <h2>{repo.name}</h2>\r\n                  Latest version: {repo.tagName}\r\n                  <br />\r\n                  Latest release:{\" \"}\r\n                  {repo.releaseDate\r\n                    .split(\"T\")\r\n                    .join(\" at \")\r\n                    .split(\"Z\")\r\n                    .join(\" UTC\")}\r\n                </CardContent>\r\n              </Grid>\r\n            </Grid>\r\n          </CardActionArea>\r\n        </Card>\r\n        <ToolBar\r\n          onClickTrashIcon={onClickTrashIcon}\r\n          onClickCheckMark={onClickCheckMark}\r\n          isHighlighted={this.isHighlighted()}\r\n          repo={repo}\r\n        />\r\n        <RepoDialog\r\n          open={this.state.openDialog}\r\n          toggleDialogVisibility={this.toggleDialogVisibility}\r\n          repo={repo}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Repo;\r\n","import React from \"react\";\r\nimport Repo from \"./Repo\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\n\r\nclass RepoList extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    const { repoList } = props;\r\n    repoList.forEach((_, index) => {\r\n      this[`repo-${index}`] = React.createRef();\r\n    });\r\n  }\r\n\r\n  render() {\r\n    const {\r\n      repoList,\r\n      onClickTrashIcon,\r\n      onClickCheckMark,\r\n      highlightedRepoList,\r\n    } = this.props;\r\n    var repoComponents = repoList.map((repo, index) => {\r\n      return repo.releaseDate ? (\r\n        <Grid item key={index}>\r\n          <Repo\r\n            repo={repo}\r\n            onClickTrashIcon={onClickTrashIcon}\r\n            onClickCheckMark={onClickCheckMark}\r\n            highlightedRepoList={highlightedRepoList}\r\n            ref={this[`repo-${index}`]}\r\n          />\r\n        </Grid>\r\n      ) : null;\r\n    });\r\n\r\n    return (\r\n      <Grid\r\n        container\r\n        justify=\"center\"\r\n        spacing={2}\r\n        alignItems=\"center\"\r\n        direction=\"column\"\r\n      >\r\n        {repoComponents}\r\n      </Grid>\r\n    );\r\n  }\r\n}\r\n\r\nexport default RepoList;\r\n","import React from \"react\";\r\nimport SpeedDial from \"@material-ui/lab/SpeedDial\";\r\nimport SpeedDialIcon from \"@material-ui/lab/SpeedDialIcon\";\r\nimport SpeedDialAction from \"@material-ui/lab/SpeedDialAction\";\r\nimport RefreshIcon from \"@material-ui/icons/Refresh\";\r\nimport DeleteForeverIcon from \"@material-ui/icons/DeleteForever\";\r\nimport ArrowDropDownCircleIcon from \"@material-ui/icons/ArrowDropDownCircle\";\r\nimport Tooltip from \"@material-ui/core/Tooltip\";\r\nimport AllOutIcon from \"@material-ui/icons/AllOut\";\r\nimport KeyboardArrowDownIcon from \"@material-ui/icons/KeyboardArrowDown\";\r\nimport \"../styles/SpeedDialControl.scss\";\r\n\r\nclass SpeedDialControl extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      isSpeedDialOpen: false,\r\n      isSpeedDialHidden: false,\r\n      speedDialDirection: \"up\",\r\n    };\r\n  }\r\n  actions = [\r\n    {\r\n      icon: <DeleteForeverIcon color=\"primary\" />,\r\n      name: \"Untrack All\",\r\n      onClick: this.props.deleteAllRepos,\r\n    },\r\n    {\r\n      icon: <RefreshIcon color=\"primary\" />,\r\n      name: \"Refresh All\",\r\n      onClick: this.props.getAllReposLatestReleases,\r\n    },\r\n  ];\r\n\r\n  onCloseSpeedDial = () => {\r\n    this.setState({ isSpeedDialOpen: false });\r\n  };\r\n\r\n  onOpenSpeedDial = () => {\r\n    this.setState({ isSpeedDialOpen: true });\r\n  };\r\n\r\n  onHiddenChange = (event) => {\r\n    this.setState({ isSpeedDialHidden: event.target.checked });\r\n  };\r\n\r\n  onClickSpeedDialAction = (callBackAction) => {\r\n    this.onCloseSpeedDial();\r\n    callBackAction();\r\n  };\r\n\r\n  render() {\r\n    const {\r\n      speedDialDirection,\r\n      isSpeedDialHidden,\r\n      isSpeedDialOpen,\r\n    } = this.state;\r\n\r\n    return (\r\n      <SpeedDial\r\n        className={\"speed-dial-control\"}\r\n        ariaLabel=\"macro-control\"\r\n        hidden={isSpeedDialHidden}\r\n        icon={<AllOutIcon />}\r\n        onClose={this.onCloseSpeedDial}\r\n        onOpen={this.onOpenSpeedDial}\r\n        open={isSpeedDialOpen}\r\n        direction={speedDialDirection}\r\n        openIcon={<ArrowDropDownCircleIcon />}\r\n      >\r\n        {this.actions.map((action) => (\r\n          <SpeedDialAction\r\n            key={action.name}\r\n            icon={action.icon}\r\n            tooltipTitle={action.name}\r\n            onClick={action.onClick}\r\n            tooltipOpen\r\n            style={{ whiteSpace: \"nowrap\" }}\r\n          />\r\n        ))}\r\n      </SpeedDial>\r\n    );\r\n  }\r\n}\r\n\r\nexport default SpeedDialControl;\r\n","import React from \"react\";\nimport \"../styles/App.scss\";\nimport SearchFunction from \"./SearchFunction\";\nimport RepoList from \"./RepoList\";\nimport Alert from \"@material-ui/lab/Alert\";\nimport { Snackbar, Grid, Button } from \"@material-ui/core\";\nimport SpeedDialControl from \"./SpeedDialControl\";\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      searchInput: \"\",\n      filterInput: \"\",\n      githubUser: null,\n      githubRepo: null,\n      repoList: [],\n      highlightedRepoList: [],\n      repoListOrderedByDateAdded: [],\n      repoListOrderedByName: [],\n      isAlertDisplayed: false,\n      searchFunctionType: \"search\",\n      headers: {\n        Authorization: `Token a6397b9f1bf0a5dd23ba6c4d516e13a852334b96`,\n      },\n    };\n    this.repoListRef = React.createRef();\n  }\n\n  handleOnSubmit = (event) => {\n    event.preventDefault();\n    this.parseSearchInput(this.state.searchInput);\n  };\n\n  parseSearchInput = (input) => {\n    const inputArray = input.split(\" \").join(\"\").split(\"/\");\n    const githubUser = inputArray[0];\n    const githubRepo = inputArray[1];\n    this.setState(\n      {\n        githubUser: githubUser,\n        githubRepo: githubRepo,\n      },\n      this.getRepoLatestRelease(githubUser, githubRepo)\n    );\n  };\n\n  onClickTrashIcon = (repo) => {\n    var newRepoList = this.state.repoList;\n    newRepoList = newRepoList.filter((repoObject) => {\n      return repoObject !== repo;\n    });\n    this.setState({ repoList: newRepoList });\n  };\n\n  isRepoAlreadyTracked = (repo) => {\n    const { repoList } = this.state;\n    for (var trackedRepo of repoList) {\n      if (\n        trackedRepo.name === repo.name &&\n        trackedRepo.tagName === repo.tagName\n      ) {\n        return true;\n      }\n    }\n    return false;\n  };\n\n  onClickCheckMark = (repoName) => {\n    var newHighlightedRepoList = this.state.highlightedRepoList;\n    var indexOfRepo = newHighlightedRepoList.indexOf(repoName);\n    if (indexOfRepo > -1) {\n      newHighlightedRepoList.splice(indexOfRepo, 1);\n    }\n    this.setState({ highlightedRepoList: newHighlightedRepoList });\n  };\n\n  deleteAllRepos = () => {\n    this.setState({\n      repoList: [],\n      highlightedRepoList: [],\n      repoListOrderedByDateAdded: [],\n      repoListOrderedByName: [],\n    });\n  };\n\n  getAllReposLatestReleases = () => {\n    const { repoList } = this.state;\n    for (var repo of repoList) {\n      this.getRepoLatestRelease(repo.gitHubUser, repo.gitHubRepo);\n    }\n  };\n\n  getRepoLatestRelease = (githubUser, githubRepo) => {\n    var repoReleaseInfo = null;\n    fetch(\n      `https://api.github.com/repos/${githubUser}/${githubRepo}/releases/latest`,\n      {\n        method: \"GET\",\n        headers: this.state.headers,\n      }\n    )\n      .then((response) => response.json())\n      .then((data) => {\n        if (data.name) {\n          repoReleaseInfo = {\n            gitHubUser: githubUser,\n            gitHubRepo: githubRepo,\n            releaseDate: data.published_at,\n            tagName: data.tag_name,\n            message: data.message,\n            body: data.body,\n            title: data.name,\n            author: data.author.login,\n            githubLink: data.html_url,\n          };\n          this.getRepoGeneralInfo(repoReleaseInfo);\n        } else if (!data.name) {\n          this.setState({ alert: \"error\", isAlertDisplayed: true });\n        }\n      });\n  };\n\n  getRepoGeneralInfo = (repoReleaseInfo) => {\n    const { githubUser, githubRepo } = this.state;\n    var newRepoList = [];\n    var newHighlightedRepoList = [];\n    fetch(`https://api.github.com/repos/${githubUser}/${githubRepo}`, {\n      method: \"GET\",\n      headers: this.state.headers,\n    })\n      .then((response) => response.json())\n      .then((data) => {\n        repoReleaseInfo.name = data.name;\n        repoReleaseInfo.description = data.description;\n        if (!this.isRepoAlreadyTracked(repoReleaseInfo)) {\n          newRepoList = this.state.repoList;\n          newRepoList.push(repoReleaseInfo);\n          newHighlightedRepoList = this.state.highlightedRepoList;\n          newHighlightedRepoList.push(repoReleaseInfo.name);\n          this.setState({\n            repoList: newRepoList,\n            alert: \"success\",\n            highlightedRepoList: newHighlightedRepoList,\n            isAlertDisplayed: true,\n          });\n        } else {\n          if (this.isRepoGotNewRelease(repoReleaseInfo)) {\n            newRepoList = this.state.repoList;\n            newRepoList = this.deleteOutdatedRepo(newRepoList, repoReleaseInfo);\n            newHighlightedRepoList = this.state.highlightedRepoList;\n            newHighlightedRepoList.push(repoReleaseInfo.name);\n            this.setState({\n              repoList: newRepoList,\n              alert: \"new release\",\n              highlightedRepoList: newHighlightedRepoList,\n              isAlertDisplayed: true,\n            });\n          } else {\n            this.setState({ alert: \"no new release\", isAlertDisplayed: true });\n          }\n        }\n      })\n      .catch((error) => {\n        console.log(error);\n      });\n  };\n\n  isRepoGotNewRelease = (newRepo) => {\n    const { repoList } = this.state;\n    for (var trackedRepo of repoList) {\n      if (\n        trackedRepo.name === newRepo.name &&\n        trackedRepo.tagName !== newRepo.tagName\n      ) {\n        return true;\n      }\n    }\n    return false;\n  };\n\n  deleteOutdatedRepo = (repoList, repo) => {\n    const filteredRepoList = repoList.filter((trackedRepo) => {\n      return trackedRepo.name !== repo.name;\n    });\n    return filteredRepoList;\n  };\n\n  searchFieldInput = (event) => {\n    this.setState({ searchInput: event.target.value });\n  };\n\n  filterFieldInput = (event) => {\n    this.setState({\n      filterInput: event.target.value,\n    });\n  };\n\n  filterRepoList = (repoList, filterWord) => {\n    var filteredRepoList = repoList.filter((repo) => {\n      return repo.name.includes(filterWord);\n    });\n    return filteredRepoList;\n  };\n\n  displayAlert = () => {\n    switch (this.state.alert) {\n      case \"success\":\n        return (\n          <Alert\n            severity=\"success\"\n            variant=\"filled\"\n            onClose={this.onCloseAlert}\n          >\n            Added a new repo for tracking\n          </Alert>\n        );\n      case \"new release\":\n        return (\n          <Alert\n            severity=\"success\"\n            variant=\"filled\"\n            onClose={this.onCloseAlert}\n          >\n            Found new release(s)\n          </Alert>\n        );\n      case \"no new release\":\n        return (\n          <Alert severity=\"info\" variant=\"filled\" onClose={this.onCloseAlert}>\n            There is no new update for these repositories\n          </Alert>\n        );\n      case \"error\":\n        return (\n          <Alert severity=\"error\" variant=\"filled\" onClose={this.onCloseAlert}>\n            Please check that you have the right user name and repository\n          </Alert>\n        );\n      default:\n        return (\n          <Alert severity=\"info\" variant=\"filled\" onClose={this.onCloseAlert}>\n            {`Enter the GitHub user followed by a '/' and the name of the repository`}\n          </Alert>\n        );\n    }\n  };\n\n  onCloseAlert = () => {\n    this.setState({ isAlertDisplayed: false });\n  };\n\n  onClickFilterFunction = () => {\n    this.setState({ searchFunctionType: \"filter\" });\n  };\n\n  onClickSearchFunction = () => {\n    this.setState({ searchFunctionType: \"search\" });\n  };\n\n  render() {\n    const {\n      repoList,\n      filterInput,\n      searchFunctionType,\n      highlightedRepoList,\n      isAlertDisplayed,\n    } = this.state;\n\n    return (\n      <div>\n        <SpeedDialControl\n          getAllReposLatestReleases={this.getAllReposLatestReleases}\n          deleteAllRepos={this.deleteAllRepos}\n        />\n        <Snackbar\n          open={isAlertDisplayed}\n          autoHideDuration={6000}\n          onClose={this.onCloseAlert}\n          anchorOrigin={{ vertical: \"top\", horizontal: \"center\" }}\n        >\n          {this.displayAlert()}\n        </Snackbar>\n        <Grid\n          container\n          alignItems=\"center\"\n          spacing={5}\n          direction=\"column\"\n          className=\"main-content\"\n        >\n          <Grid item className=\"empty-space\"></Grid>\n          <Grid item className=\"search-function\">\n            <SearchFunction\n              searchFieldInput={this.searchFieldInput}\n              handleOnSubmit={this.handleOnSubmit}\n              filterFieldInput={this.filterFieldInput}\n              onClickFilterFunction={this.onClickFilterFunction}\n              onClickSearchFunction={this.onClickSearchFunction}\n              searchFunctionType={searchFunctionType}\n            />\n          </Grid>\n          <Grid item>\n            <RepoList\n              repoList={this.filterRepoList(repoList, filterInput)}\n              onClickTrashIcon={this.onClickTrashIcon}\n              onClickCheckMark={this.onClickCheckMark}\n              highlightedRepoList={highlightedRepoList}\n              ref={this.repoListRef}\n            />\n          </Grid>\n        </Grid>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./styles/index.scss\";\nimport App from \"./components/App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport { createMuiTheme, ThemeProvider } from \"@material-ui/core/styles\";\n\nconst theme = createMuiTheme({\n  palette: {\n    // type: \"\",\n  },\n});\n\nReactDOM.render(\n  <ThemeProvider theme={theme}>\n    <React.StrictMode>\n      <App />\n    </React.StrictMode>\n  </ThemeProvider>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}